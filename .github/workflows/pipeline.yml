name: CI Checks

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  check-format:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ^1.24

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout code into the Go module directory
        uses: actions/checkout@v4

      - name: Check formatting
        run: task check-format

  test:
    name: Test Application
    needs: [check-format]
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ^1.24

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout code into the Go module directory
        uses: actions/checkout@v4

      - name: Run tests
        run: task test

      - name: Coverage check
        run: task coverage

      - name: Generate coverage report
        run: task report

      - name: Copy coverage report
        run: |
          mkdir reports
          cp coverage.html reports/

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: reports

  build:
    name: Build Application
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ^1.24

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout out code into the Go module directory
        uses: actions/checkout@v4

      - name: Build
        run: task build

      - name: Copy files
        run: |
          mkdir ./artifacts
          cp api ./artifacts

      - name: Archive
        uses: actions/upload-artifact@v4
        with:
          name: api
          path: artifacts

  deliver:
    name: Release
    needs: build
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download binary
        uses: actions/download-artifact@v4
        with:
          name: api

      - name: Verificar existencia de archivo api
        run: |
          if [ ! -f api ]; then
            echo "El archivo 'api' no existe."
            exit 1
          fi

      - name: Mostrar detalles del archivo api
        run: |
          ls -lh api
          file api
          stat api

      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            Still in experimentation phase
          draft: true
          prerelease: true
          files: api
